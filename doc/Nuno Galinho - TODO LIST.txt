::

P.I.:
	.Mudar Estado
	.bit controlo
	.image bitmap
	.autenticação/snipet
	.paginação para \trilhoCRUD\Index
	
ALGORITMO MUDAR ESTADO:
	OBJECTIVO:
	.Em Editar quando mudo de Estado de um Trilho, insiro na BD EstadoTrilho novo registo, em que a 
	 DataInicio do novo Estado é Date.Now e DataFim é nulo.
	
	Trilho Estado DataInicio DataFim
	1       1      12         now    > inserir DataFim (1,1)
	1       2      now       
	
	DUVIDAS:
		.Paginação
		.Para o mm Trilho de cada vez que mudo de Estado => nova entrada em EstadoTrilho?
	     Isto significa haver chaves duplicadas!S\Ñ?
		.No form Distancia = 9.3 > Erro!
		.Quando mudamos Estado Aberto > Fechado equivale a desativar trilho? ou é informação a mostrar ao turista?
		

.ENG. SOFT.2:
	.Para o mm Trilho de cada vez que mudo de Estado => nova entrada em EstadoTrilho?
	 Isto significa haver chaves duplicadas!S\Ñ?
	.Quando mudamos Estado Aberto > Fechado equivale a desativar trilho? ou é informação a mostrar ao turista?
	.Casos uso criar estado + criar dificuldade ??
	.
	.SEMANTICA DAS CLASSES: 
		.Operações - classe EstadoTrilho: (implementar primeiro para perceber)


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

.VALIDAÇÕES:
	.grupo 12
	.leandro
	.paredes
.INSERÇÃO + ALTERAÇÃO + HISTORICO:
	.paredes (ver dificuldade: Trails1/create)

// ---------------------------------------------------------------
	public static class StringExt
{
    public static string Truncate(this string value, int maxLength)
    {
        if (string.IsNullOrEmpty(value)) return value;
        return value.Length <= maxLength ? value : value.Substring(0, maxLength); 
    }
}
// ---------------------------------------------------------------
public static class StringExt
{
    public static string Truncate( this string value, int maxLength )
    {
        if (string.IsNullOrEmpty(value)) { return value; }

        return value.Substring(0, Math.Min(value.Length, maxLength));
    }
}

// --------------------------------------------------------------
string result = string.Join("", value.Take(maxLength)); // .NET 4 Join

string.Concat(myString.Take(maxLength));

string Left(string s, int left)

myString.Substring(0, length); // myString >= length